// Code generated by MockGen. DO NOT EDIT.
// Source: lib/integrations/wyre/interface.go

// Package mock_wyre is a generated GoMock package.
package mock_wyre

import (
	gomock "github.com/golang/mock/gomock"
	wyre "github.com/khoerling/flux/api/lib/integrations/wyre"
	reflect "reflect"
)

// MockClientInterface is a mock of ClientInterface interface
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// GetPaymentMethod mocks base method
func (m *MockClientInterface) GetPaymentMethod(token string, paymentMethodID wyre.PaymentMethodID) (*wyre.PaymentMethod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentMethod", token, paymentMethodID)
	ret0, _ := ret[0].(*wyre.PaymentMethod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentMethod indicates an expected call of GetPaymentMethod
func (mr *MockClientInterfaceMockRecorder) GetPaymentMethod(token, paymentMethodID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentMethod", reflect.TypeOf((*MockClientInterface)(nil).GetPaymentMethod), token, paymentMethodID)
}

// CreateAccount mocks base method
func (m *MockClientInterface) CreateAccount(token string, req wyre.CreateAccountRequest) (*wyre.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", token, req)
	ret0, _ := ret[0].(*wyre.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount
func (mr *MockClientInterfaceMockRecorder) CreateAccount(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockClientInterface)(nil).CreateAccount), token, req)
}

// UploadDocument mocks base method
func (m *MockClientInterface) UploadDocument(token string, req wyre.UploadDocumentRequest) (*wyre.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadDocument", token, req)
	ret0, _ := ret[0].(*wyre.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadDocument indicates an expected call of UploadDocument
func (mr *MockClientInterfaceMockRecorder) UploadDocument(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadDocument", reflect.TypeOf((*MockClientInterface)(nil).UploadDocument), token, req)
}

// CreateAPIKey mocks base method
func (m *MockClientInterface) CreateAPIKey(token string, masqueradeAs wyre.AccountID, req wyre.CreateAPIKeyRequest) (*wyre.CreateAPIKeyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", token, masqueradeAs, req)
	ret0, _ := ret[0].(*wyre.CreateAPIKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAPIKey indicates an expected call of CreateAPIKey
func (mr *MockClientInterfaceMockRecorder) CreateAPIKey(token, masqueradeAs, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockClientInterface)(nil).CreateAPIKey), token, masqueradeAs, req)
}

// CreateTransfer mocks base method
func (m *MockClientInterface) CreateTransfer(token string, req wyre.CreateTransferRequest) (*wyre.TransferDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransfer", token, req)
	ret0, _ := ret[0].(*wyre.TransferDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTransfer indicates an expected call of CreateTransfer
func (mr *MockClientInterfaceMockRecorder) CreateTransfer(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransfer", reflect.TypeOf((*MockClientInterface)(nil).CreateTransfer), token, req)
}

// ConfirmTransfer mocks base method
func (m *MockClientInterface) ConfirmTransfer(token string, req wyre.ConfirmTransferRequest) (*wyre.TransferDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfirmTransfer", token, req)
	ret0, _ := ret[0].(*wyre.TransferDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConfirmTransfer indicates an expected call of ConfirmTransfer
func (mr *MockClientInterfaceMockRecorder) ConfirmTransfer(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfirmTransfer", reflect.TypeOf((*MockClientInterface)(nil).ConfirmTransfer), token, req)
}

// UpdateAccount mocks base method
func (m *MockClientInterface) UpdateAccount(token string, accountID wyre.AccountID, req wyre.UpdateAccountRequest) (*wyre.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccount", token, accountID, req)
	ret0, _ := ret[0].(*wyre.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAccount indicates an expected call of UpdateAccount
func (mr *MockClientInterfaceMockRecorder) UpdateAccount(token, accountID, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccount", reflect.TypeOf((*MockClientInterface)(nil).UpdateAccount), token, accountID, req)
}

// GetTransferHistory mocks base method
func (m *MockClientInterface) GetTransferHistory(token string, offset, length int64) (*wyre.GetTransferHistoryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransferHistory", token, offset, length)
	ret0, _ := ret[0].(*wyre.GetTransferHistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransferHistory indicates an expected call of GetTransferHistory
func (mr *MockClientInterfaceMockRecorder) GetTransferHistory(token, offset, length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransferHistory", reflect.TypeOf((*MockClientInterface)(nil).GetTransferHistory), token, offset, length)
}

// GetTransfer mocks base method
func (m *MockClientInterface) GetTransfer(token, transferID string) (*wyre.TransferDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransfer", token, transferID)
	ret0, _ := ret[0].(*wyre.TransferDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransfer indicates an expected call of GetTransfer
func (mr *MockClientInterfaceMockRecorder) GetTransfer(token, transferID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransfer", reflect.TypeOf((*MockClientInterface)(nil).GetTransfer), token, transferID)
}

// GetAccount mocks base method
func (m *MockClientInterface) GetAccount(token string, accountID wyre.AccountID) (*wyre.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", token, accountID)
	ret0, _ := ret[0].(*wyre.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccount indicates an expected call of GetAccount
func (mr *MockClientInterfaceMockRecorder) GetAccount(token, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockClientInterface)(nil).GetAccount), token, accountID)
}

// SubscribeWebhook mocks base method
func (m *MockClientInterface) SubscribeWebhook(token, subscribeTo, notifyTarget string) (*wyre.SubscribeWebhookResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubscribeWebhook", token, subscribeTo, notifyTarget)
	ret0, _ := ret[0].(*wyre.SubscribeWebhookResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SubscribeWebhook indicates an expected call of SubscribeWebhook
func (mr *MockClientInterfaceMockRecorder) SubscribeWebhook(token, subscribeTo, notifyTarget interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeWebhook", reflect.TypeOf((*MockClientInterface)(nil).SubscribeWebhook), token, subscribeTo, notifyTarget)
}

// CreatePaymentMethod mocks base method
func (m *MockClientInterface) CreatePaymentMethod(token string, req wyre.CreatePaymentMethodRequest) (*wyre.PaymentMethod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePaymentMethod", token, req)
	ret0, _ := ret[0].(*wyre.PaymentMethod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePaymentMethod indicates an expected call of CreatePaymentMethod
func (mr *MockClientInterfaceMockRecorder) CreatePaymentMethod(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePaymentMethod", reflect.TypeOf((*MockClientInterface)(nil).CreatePaymentMethod), token, req)
}

// CreateWyrePaymentMethod mocks base method
func (m *MockClientInterface) CreateWyrePaymentMethod(token string, req wyre.CreateWyrePaymentMethodRequest) (*wyre.PaymentMethod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWyrePaymentMethod", token, req)
	ret0, _ := ret[0].(*wyre.PaymentMethod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWyrePaymentMethod indicates an expected call of CreateWyrePaymentMethod
func (mr *MockClientInterfaceMockRecorder) CreateWyrePaymentMethod(token, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWyrePaymentMethod", reflect.TypeOf((*MockClientInterface)(nil).CreateWyrePaymentMethod), token, req)
}

// CreateWalletOrderReservation mocks base method
func (m *MockClientInterface) CreateWalletOrderReservation(req wyre.CreateWalletOrderReservationRequest) (*wyre.CreateWalletOrderReservationResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWalletOrderReservation", req)
	ret0, _ := ret[0].(*wyre.CreateWalletOrderReservationResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWalletOrderReservation indicates an expected call of CreateWalletOrderReservation
func (mr *MockClientInterfaceMockRecorder) CreateWalletOrderReservation(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWalletOrderReservation", reflect.TypeOf((*MockClientInterface)(nil).CreateWalletOrderReservation), req)
}

// GetWalletOrderReservation mocks base method
func (m *MockClientInterface) GetWalletOrderReservation(req wyre.GetWalletOrderReservationRequest) (*wyre.WalletOrderReservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletOrderReservation", req)
	ret0, _ := ret[0].(*wyre.WalletOrderReservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletOrderReservation indicates an expected call of GetWalletOrderReservation
func (mr *MockClientInterfaceMockRecorder) GetWalletOrderReservation(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletOrderReservation", reflect.TypeOf((*MockClientInterface)(nil).GetWalletOrderReservation), req)
}

// WalletOrderDetails mocks base method
func (m *MockClientInterface) WalletOrderDetails(woID wyre.WalletOrderID) (*wyre.WalletOrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WalletOrderDetails", woID)
	ret0, _ := ret[0].(*wyre.WalletOrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WalletOrderDetails indicates an expected call of WalletOrderDetails
func (mr *MockClientInterfaceMockRecorder) WalletOrderDetails(woID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WalletOrderDetails", reflect.TypeOf((*MockClientInterface)(nil).WalletOrderDetails), woID)
}

// CreateWalletOrder mocks base method
func (m *MockClientInterface) CreateWalletOrder(req wyre.CreateWalletOrderRequest) (*wyre.WalletOrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWalletOrder", req)
	ret0, _ := ret[0].(*wyre.WalletOrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWalletOrder indicates an expected call of CreateWalletOrder
func (mr *MockClientInterfaceMockRecorder) CreateWalletOrder(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWalletOrder", reflect.TypeOf((*MockClientInterface)(nil).CreateWalletOrder), req)
}

// GetWalletOrderAuthorizations mocks base method
func (m *MockClientInterface) GetWalletOrderAuthorizations(req wyre.GetWalletOrderAuthorizationsRequest) (*wyre.WalletOrderAuthorizations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletOrderAuthorizations", req)
	ret0, _ := ret[0].(*wyre.WalletOrderAuthorizations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWalletOrderAuthorizations indicates an expected call of GetWalletOrderAuthorizations
func (mr *MockClientInterfaceMockRecorder) GetWalletOrderAuthorizations(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletOrderAuthorizations", reflect.TypeOf((*MockClientInterface)(nil).GetWalletOrderAuthorizations), req)
}

// SubmitWalletOrderAuthorizations mocks base method
func (m *MockClientInterface) SubmitWalletOrderAuthorizations(req wyre.SubmitWalletOrderAuthorizationsRequest) (*wyre.WalletOrderAuthorizationsSubmissionStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitWalletOrderAuthorizations", req)
	ret0, _ := ret[0].(*wyre.WalletOrderAuthorizationsSubmissionStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SubmitWalletOrderAuthorizations indicates an expected call of SubmitWalletOrderAuthorizations
func (mr *MockClientInterfaceMockRecorder) SubmitWalletOrderAuthorizations(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitWalletOrderAuthorizations", reflect.TypeOf((*MockClientInterface)(nil).SubmitWalletOrderAuthorizations), req)
}

// PricedExchangeRates mocks base method
func (m *MockClientInterface) PricedExchangeRates() (*wyre.PricingRates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PricedExchangeRates")
	ret0, _ := ret[0].(*wyre.PricingRates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PricedExchangeRates indicates an expected call of PricedExchangeRates
func (mr *MockClientInterfaceMockRecorder) PricedExchangeRates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PricedExchangeRates", reflect.TypeOf((*MockClientInterface)(nil).PricedExchangeRates))
}

// SubmitAuthToken mocks base method
func (m *MockClientInterface) SubmitAuthToken(secretKey string) (*wyre.SubmitAuthTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitAuthToken", secretKey)
	ret0, _ := ret[0].(*wyre.SubmitAuthTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SubmitAuthToken indicates an expected call of SubmitAuthToken
func (mr *MockClientInterfaceMockRecorder) SubmitAuthToken(secretKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitAuthToken", reflect.TypeOf((*MockClientInterface)(nil).SubmitAuthToken), secretKey)
}
